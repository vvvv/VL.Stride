[TextureSource]
[Category("Source")]
[Summary("Returns a texture with a linear gradient")]
[Tags("ramp")]
[OutputFormat("R16G16B16A16_Float")]

shader Gradient_TextureFX : TextureFX
{
    [Color] float4 From = float4(0,0,0,1);
    [Color] float4 To = float4(1,1,1,1);
    bool isHorizontal;
    float Gamma = 2.2f;
    // bool Dither = false;
    // float Dithering = 1;
    // float DitherSeed = 0; 

    // TODO: Extend with a radial and directional gradient
    stage override float4 Shading()
    {
        float2 uv = streams.TexCoord;
        float fade = isHorizontal ? uv.x : uv.y;

        fade = pow(fade, Gamma);

        float4 c = lerp(From, To, fade);

        // if (Dither) //nedds target size and is always expensive because shader doesn't get optimized when off... investigate.
        //      c = _dither(c, uv * R, DitherSeed, 256, Dithering);

        //===>Dither noise function move to HappyNoise class
        return c;
    }
};